{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6QAoBeA,EAjBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACtC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAJ,GAAW,OACxB,6BACKA,EAAYK,YAIzB,8BAAIP,EAAJ,UACA,qBAAKG,UAAWC,IAAMH,MAAOO,IAAKP,EAAOQ,IAAI,SC6C1CC,G,MAxDH,WAER,IAFc,EAKgBC,mBAAS,IALzB,mBAKPC,EALO,KAKEC,EALF,OAMcF,mBAAS,IANvB,mBAMPG,EANO,KAMCC,EAND,OAOYJ,mBAAS,WAPrB,mBAOPK,EAPO,KAOAC,EAPA,KASdC,qBAAU,WACNC,MACD,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,mCAAD,OAAoCL,EAApC,mBAZjB,WAYiB,oBAXhB,qCAUG,cACTM,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJF,2CAAH,qDAiBhB,OACI,sBAAKtB,UAAU,MAAf,UACI,uBAAMyB,SARI,SAAAC,GACdA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKqBZ,UAAU,cAArC,UACI,uBAAOA,UAAU,aACb4B,KAAK,OACLC,MAAOlB,EACPmB,SAhBK,SAAAJ,GACjBd,EAAUc,EAAEK,OAAOF,UAgBX,wBAAQ7B,UAAU,gBAAgB4B,KAAK,SAAvC,uBAIJ,qBAAK5B,UAAU,UAAf,SACKS,EAAQN,KAAI,SAAAD,GAAM,OACf,cAAC,EAAD,CAEIN,MAAOM,EAAOA,OAAO8B,MACrBnC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO8B,iBCpC5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.6cd7c264.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./recipe.module.css\"\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n    return (\n        <div className={style.recipe}>\n            <h1>{title}</h1>\n            <ol>\n                {ingredients.map(ingredients => (\n                    <li>\n                        {ingredients.text}\n                    </li>\n                ))}\n            </ol>\n            <p>{calories} cal</p>\n            <img className={style.image} src={image} alt=\"\" />\n        </div>\n    );\n}\n\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\n    const APP_ID = '7d8f9f33'\n    const APP_KEY = '0b6767acd468cb8f4a4f8f984a796842'\n\n    const [recipes, setRecipes] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState('chicken');\n\n    useEffect(() => {\n        getRecipes();\n    }, [query]);\n\n    const getRecipes = async () => {\n        const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n        const data = await response.json();\n        setRecipes(data.hits);\n        console.log(data.hits);\n    };\n\n    const updateSearch = e => {\n        setSearch(e.target.value);\n    };\n\n    const getSearch = e => {\n        e.preventDefault();\n        setQuery(search);\n        setSearch('');\n    }\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={getSearch} className=\"search-form\">\n                <input className=\"search-bar\"\n                    type=\"text\"\n                    value={search}\n                    onChange={updateSearch} />\n                <button className=\"search-button\" type=\"submit\">\n                    Search\n                </button>\n            </form>\n            <div className=\"recipes\">\n                {recipes.map(recipe => (\n                    <Recipe\n                        key={recipe.recipe.label}\n                        title={recipe.recipe.label}\n                        calories={recipe.recipe.calories}\n                        image={recipe.recipe.image}\n                        ingredients={recipe.recipe.ingredients}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}